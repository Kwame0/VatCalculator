{% extends 'base.html.twig' %}

{% block title %}Vat Calculator{% endblock %}

{% block body %}
<div class="container mx-auto mt-10">
    <div id="message"></div>
    <div class="bg-white p-6 rounded shadow-md w-1/2 mx-auto">
        <h1 class="text-2xl mb-4">VAT Calculator</h1>
        <form id="vat-form" method="post">
            <div class="mb-4">
                <label class="block text-gray-700">Value</label>
                <input type="number" step="0.01" name="value" class="mt-1 p-2 w-full border-2 border-gray-300 rounded">
            </div>
            <div class="mb-4">
                <label class="block text-gray-700">Rate (%)</label>
                <input type="number" step="0.01" name="rate" class="mt-1 p-2 w-full border-2 border-gray-300 rounded">
            </div>
            <div class="mb-4">
                <label class="block text-gray-700">Inclusive of VAT</label>
                <input type="checkbox" name="isInclusive" class="mt-1">
            </div>
            <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-700">Calculate</button>
        </form>
    </div>
    <div id="preview" class="my-4">
    </div>
    <div class="flex float-right space-x-4">
        <button class="bg-green-500 export-csv hover:bg-green-600 text-white font-semibold py-2 px-4 rounded">
            Export as CSV
        </button>
        <button onclick="clearHistory()" class="bg-red-500 hover:bg-red-600 text-white font-semibold py-2 px-4 rounded">
            Clear History
        </button>
    </div>
</div>
<script>

let csvJson = [];

$(document).ready(function() {
    $("#vat-form").on("submit", function(event) {
        event.preventDefault();

        const value = $("input[name='value']").val();
        const rate = $("input[name='rate']").val();
        const isInclusive = $("input[name='isInclusive']").prop("checked");
        console.log(isInclusive);

        $.ajax({
            url: "/api/calculate-vat",
            method: "POST",
            data: {
                value: value,
                rate: rate,
                isInclusive: isInclusive
            },
            success: function(response) {
                //console.log(response); // for testing
                success("VAT Calculated!");
                fetchVatHistory();

            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error("Error:", textStatus, errorThrown);
            }
        });
    });
});

function renderTable(data) {
    // Clear the preview div
    const previewDiv = $('#preview');
    previewDiv.empty();

    // Create the table with Tailwind CSS classes
    const table = $('<table class="min-w-full divide-y divide-gray-200"></table>');
    const thead = $('<thead class="bg-gray-50"></thead>');
    const tbody = $('<tbody class="bg-white divide-y divide-gray-200"></tbody>');

    // Add table header
    const headerRow = $('<tr></tr>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value</th>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Percentage Rate</th>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Inclusive</th>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value Ex VAT</th>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value Inc VAT</th>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">VAT Amount</th>');
    headerRow.append('<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Created At</th>');
    thead.append(headerRow);

    // Add table rows
    data.forEach(item => {
        const row = $('<tr></tr>');
        row.append(`<td class="px-6 py-4 whitespace-nowrap">£${numberWithCommas(item.value.toFixed(2))}</td>`);
        row.append(`<td class="px-6 py-4 whitespace-nowrap">${item.rate}%</td>`);
        row.append(`<td class="px-6 py-4 whitespace-nowrap">${item.isInclusive ? 'Yes' : 'No'}</td>`);
        row.append(`<td class="px-6 py-4 whitespace-nowrap">£${numberWithCommas(item.valueExVat.toFixed(2))}</td>`);
        row.append(`<td class="px-6 py-4 whitespace-nowrap">£${numberWithCommas(item.valueIncVat.toFixed(2))}</td>`);
        row.append(`<td class="px-6 py-4 whitespace-nowrap">£${numberWithCommas(item.vatAmount.toFixed(2))}</td>`);
        row.append(`<td class="px-6 py-4 whitespace-nowrap">${item.createdAt}</td>`);
        tbody.append(row);
    });

    // Assemble the table and append it to the preview div
    table.append(thead);
    table.append(tbody);
    previewDiv.append(table);
}

// incase you need to escape xss
function escapeHtml(unsafe) {
    return unsafe
        .replace(/&/g, "&amp;")
        .replace(/</g, "&lt;")
        .replace(/>/g, "&gt;")
        .replace(/"/g, "&quot;")
        .replace(/'/g, "&#039;");
}

function fetchVatHistory() {
    $.ajax({
        url: '/api/vat-history',
        method: 'GET',
        dataType: 'json',
        success: function (response) {
            renderTable(response);
            csvJson = response;
        },
        error: function (error) {
            console.error('Error fetching VAT history:', error);
        },
    });
}

fetchVatHistory();

function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}

function clearHistory() {
    $.ajax({
        url: '/api/clear-history',
        method: 'POST',
        dataType: 'json',
        success: function (response) {
            success(response.message);
            renderTable([]);
        },
        error: function (error) {
            console.error('Error clearing VAT history:', error);
        },
    });
    csvJson = [];
}

function success(message) {
    // Create success message element
    var $message = $('<div class="bg-green-100 border border-green-400 my-4 text-green-700 px-4 py-3 rounded relative" role="alert"></div>');
    $message.text(message);

    // Add message to page
    $('#message').append($message);

    // Animate message
    $message.hide().slideDown(200).delay(2000).slideUp(200);
}

function error(message) {
    // Create success message element
    var $message = $('<div class="bg-red-100 border border-red-400 my-4 text-red-700 px-4 py-3 rounded relative" role="alert"></div>');
    $message.text(message);

    // Add message to page
    $('#message').append($message);

    // Animate message
    $message.hide().slideDown(200).delay(2000).slideUp(200);
}

function exportTableToCSV(filename) {
    const headers = ['ID', 'Value', 'Rate', 'Inclusive', 'Value Ex VAT', 'Value Inc VAT', 'VAT Amount'];
    let csvData = headers.join(',') + '\r\n';
    
    if(csvJson.length < 1){ error("There is nothing to export"); return; }

    csvJson.forEach(function (row) {
        const rowData = [
            row.id,
            row.value,
            row.rate,
            row.isInclusive ? 'Yes' : 'No',
            row.valueExVat,
            row.valueIncVat,
            row.vatAmount
        ];
        csvData += rowData.join(',') + '\r\n';
    });

    const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    const url = URL.createObjectURL(blob);
    link.setAttribute('href', url);
    link.setAttribute('download', filename);
    link.style.visibility = 'hidden';
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
}

// Attach the exportTableToCSV function to the Export CSV button
$('button.export-csv').on('click', function () {
    exportTableToCSV('vat_history.csv');
});

</script>
{% endblock %}
